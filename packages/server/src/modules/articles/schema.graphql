type Article {
  id: ID!
  title: String!
  content: String!
  authorId: ID!
  folderId: ID!
}

input CreateArticle {
  title: String!
  content: String!
  folderId: ID!
}

input UpdateArticle {
  id: ID!
  title: String
  content: String
}

input MoveArticle {
  id: ID!
  folderId: ID!
}

input DeleteArticle {
  id: ID!
}

type Folder {
  id: ID!
  name: String!
  decription: String!
  authorId: ID!
}

input CreateFolder {
  parentId: ID
  name: String!
  description: String!
}

input UpdateFolder {
  id: Int!
  name: String
  description: String
}

input MoveFolder {
  id: Int!
  folderId: Int!
}

input DeleteFolder {
  id: Int!
}

type Mutation {
  createArticle(input: CreateArticle!): Article
  updateArticle(input: UpdateArticle!): Article
  moveArticle(input: MoveArticle!): Article
  deleteArticle(input: DeleteArticle!): Article

  createFolder(input: CreateFolder!): Folder
  updateFolder(input: UpdateFolder!): Folder
  moveFolder(input: MoveFolder!): Folder
  deleteFolder(input: DeleteFolder!): Folder
}

type Query {
  getAllArticles(limit: Int): [Article]!
  getArticleById(id: Int!): Article
  getArticlesByTitle(title: String!): [Article]
  getFavouriteArticles: [Article]
  getMyArticles: [Article]

  getAllFolders(limit: Int): [Folder]!
  getFolderById(id: Int!): Folder
  getFoldersByName(name: String!): [Folder]
  getFavouriteFolders: [Folder]
  getMyFolders: [Article]
  getChildrenFolders(id: Int!): [Folder]
  getChildrenArticles(id: Int!): [Article]
}
